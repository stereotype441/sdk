library;
import self as self;
import "dart:core" as core;

class A1 extends core::Object {
  field core::Object* field = null;
  synthetic constructor •() → self::A1*
    : super core::Object::•()
    ;
  method method1() → void {}
}
extension A2 on self::A1* {
  method method2 = self::A2|method2;
  method method3 = self::A2|method3;
  method method4 = self::A2|method4;
}
method A2|method2(final self::A1* #this) → void
  return #this.{self::A1::method1}();
method A2|method3(final self::A1* #this) → core::Object*
  return #this.{self::A1::field};
method A2|method4(final self::A1* #this, core::Object* o) → void {
  #this.{self::A1::field} = o;
}
static method main() → dynamic {}
